import React, { useEffect, useState } from 'react';
import Card from '../components/Card'


const RenderCards = ({ data, title }) => {

  if (data?.length > 0) {
    return data.map((post) => (
      <Card key={post._id}>
        {/* Your Card content */}
      </Card>
    ));
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl text-uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (err) {
        alert(err);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <section className="container">
      <div>
        <h1 className="font-weight-bold text-dark display-4">The Community Showcase</h1>
        <p className="mt-2 text-muted lead">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className="mt-4">
        <div className="form-group">
          <label htmlFor="text" className="font-weight-bold">Search posts</label>
          <input
            type="text"
            className="form-control"
            id="text"
            placeholder="Search something..."
            value={searchText}
            onChange={handleSearchChange}
          />
        </div>
      </div>

      <div className="mt-4">
        {loading ? (
          <div className="d-flex justify-content-center align-items-center">
            {/* You can add a Bootstrap loader here */}
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-weight-medium text-muted h4 mb-3">
                Showing Results for <span className="text-dark">{searchText}</span>:
              </h2>
            )}
            <div className="row">
              {searchText ? (
                <RenderCards data={searchedResults} title="No Search Results Found" />
              ) : (
                <RenderCards data={allPosts} title="No Posts Yet" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
